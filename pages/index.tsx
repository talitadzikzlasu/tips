import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.scss";
import { useEffect, useState } from "react";
import classnames from "classnames";
import Link from "next/link";
import ky from "ky";
import { FlagIcon, FlagIconCode } from "react-flag-kit";
import { getCurrencyByCode, CodeType } from "@/data";
interface locationProps {
  ip: string;
  country?: FlagIconCode;
  city: string;
  timezone: string;
}

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [scrolled, setScrolled] = useState(false);

  const [location, setLocation] = useState<locationProps>({
    ip: "",
    country: undefined,
    city: "",
    timezone: "",
  });

  const [tip, setTip] = useState<number>();
  const [smallTip, setSmallTip] = useState<number>();
  const [generousTip, setGenerousTip] = useState<number>();
  const getGeoInfo = async () => {
    const response: locationProps = await ky
      .get("https://ipapi.co/json/")
      .json();
    setLocation(response);
    console.log(response);
  };
  useEffect(() => {
    window.onscroll = function () {
      if (window.scrollY > 50) {
        setScrolled(true);
      } else {
        setScrolled(false);
      }
    };
  }, []);

  useEffect(() => {
    getGeoInfo();
  }, []);

  const countTip = (event: any) => {
    event.preventDefault();
    console.log("EVENT", event);
    setTip(
      Math.round((0.1 * event.target.bill.value + Number.EPSILON) * 100) / 100
    );
    setGenerousTip(
      Math.round((0.2 * event.target.bill.value + Number.EPSILON) * 100) / 100
    );
    setSmallTip(
      Math.round((0.2 * event.target.bill.value + Number.EPSILON) * 100) / 100
    );
    console.log("BBBBBBBBBBBBb", event.target.bill.value);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <nav
          className={classnames(
            styles.navbar,
            scrolled && styles.navbarShaddow
          )}
        >
          <div className={styles.logo}>Calculator </div>
          <div>
            <ul>
              <li>
                <Link href="/">home</Link>
              </li>
              <li>
                <Link href="/countries">countries</Link>
              </li>
              <li>
                <Link href="/history">Tips history</Link>
              </li>
              <li>
                <Link href="/contact">Contact</Link>
              </li>
            </ul>
          </div>
        </nav>
        <div className={styles.mainContainer}>
          <aside className={styles.mainDescription}>
            <h1>Tips Calculator</h1>
            <p>
              Tip your way around the world with ease! Say goodbye to mental
              math and awkward tip calculations when dining abroad.{" "}
            </p>
            <p>
              Our tips calculator app has got your back (and your wallet)
              covered.
            </p>
            <form
              onSubmit={(event) => {
                countTip(event);
              }}
            >
              <div className={styles.billRow}>
                <span>Your bill:</span>
                <input className={styles.billInput} name="bill"></input>
                {location?.country && (
                  <span>
                    {/* @ts-ignore */}
                    {getCurrencyByCode([location.country as CodeType])}
                  </span>
                )}
                <button className={styles.billButton} type="submit">
                  Count tip
                </button>
                {location?.country && (
                  <FlagIcon
                    className={styles.flagButton}
                    code={location.country}
                    size={48}
                  />
                )}
              </div>
            </form>
            {tip && (
              <div className={styles.tipsResults}>
                <div className={styles.tipsData}>
                  <div>Generous tip: {generousTip}</div>
                  <div>Regular tip: {tip}</div>
                  <div>Minimum tip: {smallTip}</div>
                </div>
              </div>
            )}
          </aside>
          <div className={styles.mainImage}>
            <img src="https://i.ibb.co/wJVmxpv/tips-main.png" />
          </div>
        </div>
        <div>{tip}</div>
      </main>
    </>
  );
}
